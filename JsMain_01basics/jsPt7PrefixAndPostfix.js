//PREFIX AND POSTFIX VIA MDN IN "INCREMENT OPERATOR"

/*
INCREMENT I.E ++ OPERATOR INCREMENTS/ADDS ONE TO OPERAND (A IN THIS CASE) AND RETURNS THE VALUE
BEFORE OR AFTER THE INCREMENT , DEPENDING ON WHERE OPERATOR(++) IS PLACED
*/

let x = 4 
const y = x++;


/*
IN THE ABOVE LINE OF CODE I.E "const y = x++" , WHAT HAPPENS IS IT FIRSTS RETURNS HE CURRENT VALUE OF "X"
I.E 4 AND THEN PERFORMS THE OPERATION (I.E INCREMENT OF X) , WHICH LEADS TO X = 5 AND Y BEING = 4 
"THE INCREMENT HAPPENS ONLY WHEN THE VALUE IS ASSIGNED" ENSURING THAT THE ORIGINAL VALUE OF X IS CAPTURED
AND WE CAN CALL T A "BEHAVIOUR OF POSTFIX IN JAVASCRIPT"
*/

console.log(`x :${x} , y :${y}`);

let a = 4 
const b = ++a  ;

/*
IN THE ABOVE LINE OF CODE I.E "CONST B = ++a" , WHAT HAPPENS IS IT FIRST INCREMENTS THE VALUUE F A , 
THEREFORE MAKING A = 5 , THEN IT RETURNS THE FINAL VALUE OF A TO THE VARIABLE B MAKING "B = 5" , 
"THE VALUE IS RETURNED AFTER INCREMENTING THE VARIABLE" , 
THIS HELPS MAINTAIN FLEXIBILTY AND DIFERENCE IN "POSTFIX" AND "PREFIX"
*/

console.log(`a :${a} , b :${b}`);

// USED TEMPLATE LITERAL (IN JS EXTRA CONCEPTS)
